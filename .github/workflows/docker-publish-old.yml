# Base context of this file created by GitHub templates. I created it Jan-2024
name: Build Docker img & Publish to GHCR

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # schedule:
  #   - cron: '37 15 * * *'
  # push:
  #   branches: ["main"]
  #   tags: ["v*.*.*"]
  # pull_request:
  #   branches: ["main"]
  workflow_dispatch: # added by me

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x64, arm64, linux/arm64/v8]
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      # - name: Set Tags
      #   id: set_tags
      #   # v1
      #   # run: echo "::set-output name=tags::$(date +'%Y%m%d%H%M%S')"
      #   # v2
      #   # run: echo "TAGS=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      #   # v3
      #   # run: |
      #   #   TAGS=$(date +'%Y%m%d%H%M%S')
      #   #   echo "TAGS=${TAGS}" >> $GITHUB_ENV
      #   # v4
      #   # run: |
      #   #   TAGS=$(date +'%Y%m%d%H%M%S')
      #   #   echo "TAGS=${TAGS}" >> $GITHUB_ENV
      #   #   echo "::set-output name=tags::${TAGS}"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.9.1
        with:
          cosign-release: "v2.1.1"

      # SUGGESTED by ChatGPT
      #
      #

      - name: Bootstrap Sigstore trust root (isolated)
        if: github.event_name != 'pull_request'
        run: |
          export COSIGN_TUF_ROOT="$RUNNER_TEMP/sigstore-tuf"
          cosign initialize

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        run: |
          export COSIGN_TUF_ROOT="$RUNNER_TEMP/sigstore-tuf"
          TAGS="${{ steps.meta.outputs.tags }}"
          DIGEST="${{ steps.build-and-push.outputs.digest }}"
          echo "$TAGS" | xargs -I {} cosign sign --yes {}@"$DIGEST"

      #
      #
      # SUGGESTED by ChatGPT

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./docker/
          push: ${{ github.event_name != 'pull_request' }}
          provenance: false # Disable provenance to avoid unknown/unknown
          sbom: false # Disable sbom to avoid unknown/unknown
          # provenance: false # with intention to avoid "unknown/unknown", but it remove any platforms info from GitHub Package page.
          # platforms: [x64, arm64, linux/arm64/v8]
          # platforms: ['x64', 'arm64', 'linux/arm64/v8']
          tags: ${{ steps.meta.outputs.tags }}
          # tags: ${{ steps.set_tags.outputs.tags }} # bad
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # outputs: type=image,name=target # not sure if OK

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          # TAGS: ${{ steps.set_tags.outputs.tags }} # bad
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # - name: Debugging Tags and Digest
      #   run: |
      #     echo "TAGS=${{ env.TAGS }}"
      #     echo "DIGEST=${{ env.DIGEST }}"
